{"version":3,"sources":["logo.svg","components/Form.js","components/Table.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Form","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleStockChange","e","setState","symbol","target","value","toUpperCase","onSubmit","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","event","wrap","_context","prev","next","preventDefault","setData","stop","_x","apply","arguments","isEnabled","stock","length","getStockAsync","state","then","data","price","open","previousClose","volume","change","changePercent","low","high","updateStocks","_ref2","_callee2","name","response","_context2","fetch","concat","sent","json","abrupt","t0","err","message","_x2","react_default","createElement","placeholder","onChange","type","onClick","style","width","disabled","color","Component","Table","moreInfo","stocks","key","handleClick","i","handleToggle","_this2","className","map","data-index","display","height","marginTop","marginlLeft","textAlign","App","stockObj","toConsumableArray","src","logo","alt","Form_Form","Table_Table","React","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4623ad79.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\n// import apiKey from '../config/alphaVantage'\n\nexport default class Form extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      err: '',\n      symbol: '',\n      price: '',\n      open: '',\n      previousClose: '',\n      volume: '',\n      change: '',\n      changePercent: '',\n      high: '',\n      low: ''\n    }\n  }\n  handleStockChange = e => {\n    this.setState({ symbol: e.target.value.toUpperCase() })\n  }\n  onSubmit = async event => {\n    event.preventDefault()\n    this.setData()\n  }\n  isEnabled = stock => {\n    return !(stock.length > 0 && stock.length <= 5)\n  }\n  setData = () => {\n    this.getStockAsync(this.state.symbol).then(data => {\n      if (data['Global Quote']['05. price']) {\n        this.setState(\n          {\n            price: data['Global Quote']['05. price'],\n            open: data['Global Quote']['02. open'],\n            previousClose: data['Global Quote']['08. previous close'],\n            volume: data['Global Quote']['06. volume'],\n            change: data['Global Quote']['09. change'],\n            changePercent: data['Global Quote']['10. change percent'],\n            low: data['Global Quote']['04. low'],\n            high: data['Global Quote']['03. high']\n          },\n          () => this.props.updateStocks(this.state)\n        )\n      }\n    })\n  }\n  getStockAsync = async name => {\n    try {\n      let response = await fetch(\n        `https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${name}&apikey=XOJSLIXCKGQBGHGX`\n      )\n      let data = await response.json()\n      return data\n    } catch (err) {\n      this.setState({ err: err.message })\n    }\n  }\n  render() {\n    return (\n      <div>\n        <form>\n          <input\n            placeholder='Enter Stock'\n            value={this.state.symbol}\n            onChange={this.handleStockChange}\n          />\n          <br />\n          <button\n            type='submit'\n            onClick={this.onSubmit}\n            value={this.state.symbol}\n            style={{ width: '140px' }}\n            disabled={this.isEnabled(this.state.symbol)}\n          >\n            Add New Stock\n          </button>\n        </form>\n        <p style={{ color: 'red' }}>{this.state.err}</p>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Table extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      moreInfo: false,\n      key: 0\n    }\n  }\n\n  moreInfo = () => {\n    if (this.state.moreInfo) {\n      return <p>{this.props.stocks[this.state.key].volume}</p>\n    }\n  }\n  handleClick = i => {\n    this.setState({ key: i, moreInfo: true,  })\n  }\n\n  handleToggle = () => {\n    this.setState({\n      moreInfo: !this.state.moreInfo\n    })\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <div>\n          <h2>Stocks</h2>\n          <table>\n            <tbody>\n              <tr>\n                <th>Stock</th>\n                <th>Price</th>\n                <th>Change</th>\n                <th>Percent Change</th>\n              </tr>\n              {this.props.stocks.map((stock, i) => {\n                return (\n                  <tr\n                    key={i}\n                    data-index={i}\n                    onClick={() => this.handleClick(i)}\n                  >\n                    <td>{stock.symbol}</td>\n                    <td>{stock.price}</td>\n                    <td>{stock.change}</td>\n                    <td>{stock.changePercent}</td>\n                  </tr>\n                )\n              })}\n            </tbody>\n          </table>\n        </div>\n        <div>\n          {this.state.moreInfo && (\n            <div>\n              <div style={{ display: 'inline-flex' }}>\n                <h3>More Info</h3>\n                <button\n                  style={{\n                    height: '30px',\n                    marginTop: '20px',\n                    width: '100px',\n                    marginlLeft: '10px'\n                  }}\n                  onClick={this.handleToggle}\n                >\n                  Collapse\n                </button>\n              </div>\n              <ul style={{ textAlign: 'left' }}>\n                <li>\n                  Volume: {this.props.stocks[this.state.key].volume} shares\n                </li>\n                <li>Open: <span className=\"bold\" >{this.props.stocks[this.state.key].open}</span></li>\n                <li>High: <span className=\"bold\" >{this.props.stocks[this.state.key].high}</span></li>\n                <li>Low: <span className=\"bold\" >{this.props.stocks[this.state.key].low}</span></li>\n                <li>previousClose: <span className=\"bold\" >{this.props.stocks[this.state.key].previousClose}</span></li>\n              </ul>\n            </div>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport logo from './logo.svg'\nimport Form from './components/Form'\nimport Table from './components/Table'\nimport './App.css'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { stocks: [] }\n  }\n\n  updateStocks = stockObj => {\n    this.setState({ stocks: [...this.state.stocks, stockObj] })\n  }\n  render() {\n    return (\n      <div className='App'>\n        <header className='App-header'>\n          <img src={logo} className='App-logo' alt='logo' />\n          <p>Stock Quote App</p>\n          <Form updateStocks={this.updateStocks} />\n          <Table stocks={this.state.stocks} />\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}